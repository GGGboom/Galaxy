<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Galaxy.dao.CommentsMapper">
  <resultMap id="BaseResultMap" type="com.example.Galaxy.entity.Comments">
    <result column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="blog_id" jdbcType="BIGINT" property="blogId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="parent_comment_id" jdbcType="BIGINT" property="parentCommentId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="comment_like_account" jdbcType="BIGINT" property="commentLikeAccount" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.Galaxy.entity.Comments">
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>
  <sql id="Blob_Column_List">
    comment_id,blog_id,user_id,parent_comment_id,create_time,update_time,comment_like_account,is_deleted
  </sql>
  <insert id="insert" parameterType="com.example.Galaxy.entity.Comments">
    insert into comments (comment_id, blog_id, user_id, 
      parent_comment_id, create_time, update_time, 
      comment_like_account, is_deleted, comment_content
      )
    values (#{commentId,jdbcType=BIGINT}, #{blogId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{parentCommentId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{commentLikeAccount,jdbcType=BIGINT}, #{isDeleted,jdbcType=BIT}, #{commentContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.Galaxy.entity.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="parentCommentId != null">
        parent_comment_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="commentLikeAccount != null">
        comment_like_account,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentId != null">
        #{parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentLikeAccount != null">
        #{commentLikeAccount,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>