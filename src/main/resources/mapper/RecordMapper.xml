<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Galaxy.dao.RecordMapper">
    <resultMap id="BaseResultMap" type="com.example.Galaxy.entity.Record">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="blog_id" jdbcType="BIGINT" property="blogId"/>
        <result column="edit_by" jdbcType="BIGINT" property="editBy"/>
        <result column="amount" jdbcType="BIGINT" property="amount"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.Galaxy.entity.Record">
        <result column="reason" jdbcType="LONGVARCHAR" property="reason"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, blog_id, edit_by, amount, create_time, update_time, is_deleted
  </sql>
    <sql id="Blob_Column_List">
    reason
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from record
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.example.Galaxy.entity.Record">
    insert into record (id, user_id, blog_id, 
      edit_by, amount, create_time, 
      update_time, is_deleted, reason
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{blogId,jdbcType=BIGINT}, 
      #{editBy,jdbcType=BIGINT}, #{amount,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, #{reason,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.example.Galaxy.entity.Record">
        insert into record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="blogId != null">
                blog_id,
            </if>
            <if test="editBy != null">
                edit_by,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="reason != null">
                reason,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="blogId != null">
                #{blogId,jdbcType=BIGINT},
            </if>
            <if test="editBy != null">
                #{editBy,jdbcType=BIGINT},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BIT},
            </if>
            <if test="reason != null">
                #{reason,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.Galaxy.entity.Record">
        update record
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="blogId != null">
                blog_id = #{blogId,jdbcType=BIGINT},
            </if>
            <if test="editBy != null">
                edit_by = #{editBy,jdbcType=BIGINT},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
            <if test="reason != null">
                reason = #{reason,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.Galaxy.entity.Record">
    update record
    set user_id = #{userId,jdbcType=BIGINT},
      blog_id = #{blogId,jdbcType=BIGINT},
      edit_by = #{editBy,jdbcType=BIGINT},
      amount = #{amount,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      reason = #{reason,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.example.Galaxy.entity.Record">
    update record
    set user_id = #{userId,jdbcType=BIGINT},
      blog_id = #{blogId,jdbcType=BIGINT},
      edit_by = #{editBy,jdbcType=BIGINT},
      amount = #{amount,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectAll" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from record
        where is_deleted != 1
    </select>
    <select id="selectByUserId" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from record
        where user_id = #{userId,jdbcType=BIGINT} and is_deleted != 1
    </select>
</mapper>