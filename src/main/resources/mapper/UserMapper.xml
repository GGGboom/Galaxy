<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.Galaxy.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.Galaxy.entity.User">
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="head_img_path" jdbcType="VARCHAR" property="headImgPath"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="passwd" jdbcType="VARCHAR" property="passwd"/>
        <result column="identity_type" jdbcType="SMALLINT" property="identityType"/>
        <result column="cellphone" jdbcType="VARCHAR" property="cellphone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="verify_code" jdbcType="VARCHAR" property="verifyCode"/>
    </resultMap>
    <sql id="Base_Column_List">
      user_id, name, head_img_path, account, passwd, identity_type, cellphone,email,verify_code
    </sql>
    <insert id="insert" parameterType="com.example.Galaxy.entity.User">
    insert into user (user_id, name, head_img_path, 
      account, passwd, identity_type, 
      cellphone, email, verify_code
      )
    values (#{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{headImgPath,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, #{identityType,jdbcType=SMALLINT}, 
      #{cellphone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{verifyCode,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.example.Galaxy.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="headImgPath != null">
                head_img_path,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="passwd != null">
                passwd,
            </if>
            <if test="identityType != null">
                identity_type,
            </if>
            <if test="cellphone != null">
                cellphone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="verifyCode != null">
                verify_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="headImgPath != null">
                #{headImgPath,jdbcType=VARCHAR},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                #{passwd,jdbcType=VARCHAR},
            </if>
            <if test="identityType != null">
                #{identityType,jdbcType=SMALLINT},
            </if>
            <if test="cellphone != null">
                #{cellphone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="verifyCode != null">
                #{verifyCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>
    <select id="login" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where account = #{account,jdbcType = VARCHAR} and passwd = #{passWd,jdbcType = VARCHAR}
    </select>
    <update id="updateSelective" parameterType="com.example.Galaxy.entity.User">
        update user
        <set>
            <if test="name!=null and name!=''">
                name=#{name,jdbcType=VARCHAR},
            </if>
            <if test="headImgPath!=null and headImgPath!=''">
                head_img_path=#{headImgPath,jdbcType=VARCHAR},
            </if>
            <if test="account!=null and account!=''">
                account=#{account,jdbcType=VARCHAR},
            </if>
            <if test="passwd!=null and passwd!=''">
                passwd=#{passwd,jdbcType=VARCHAR},
            </if>
            <if test="identityType!=null">
                identity_type=#{identityType,jdbcType=SMALLINT},
            </if>
            <if test="cellphone!=null and cellphone!=''">
                cellphone=#{cellphone,jdbcType=VARCHAR},
            </if>
            <if test="email!=null and email!=''">
                email=#{email,jdbcType=VARCHAR},
            </if>
            <if test="verifyCode!=null and verifyCode!=''">
                verify_code=#{verifyCode,jdbcType=VARCHAR},
            </if>
            user_id = #{userId,jdbcType=BIGINT}
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <resultMap id="userRoleListMapSelect" type="com.example.Galaxy.entity.User" extends="BaseResultMap">
        <collection property="roleList" resultMap="com.example.Galaxy.dao.SysRoleMapper.userRole"/>
    </resultMap>

    <select id="selectAllUserAndRoles" resultMap="userRoleListMapSelect">
        select
          u.user_id,
          u.name,
          u.head_img_path,
          u.account,
          u.passwd,
          u.identity_type,
          u.cellphone,
          u.email,
          u.verify_code,
          r.id,
          r.role_name,
          r.enabled,
          r.create_by,
          r.create_time,
          r.update_time,
          p.id,
          p.privilege_name,
          p.privilege_url
        from user u
        inner join sys_user_role ur on ur.user_id = u.user_id
        inner join sys_role r on r.id = ur.role_id
        inner join sys_role_privilege rp on rp.role_id = r.id
        inner join sys_privilege p on p.id = rp.privilege_id
        where  u.user_id = #{userId,jdbcType=BIGINT}
    </select>


    <resultMap id="userRoleAndPrivilegeSelectMap" type="com.example.Galaxy.entity.User">
        <collection property="roleList"
                    column="{userId = user_id}"
                    select="com.example.Galaxy.dao.SysRoleMapper.selectRoleAndPrivilegeByUserId"/>
    </resultMap>
    <select id="selectUserRoleAndPrivilege" resultMap="userRoleAndPrivilegeSelectMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

</mapper>